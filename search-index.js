var searchIndex = new Map(JSON.parse('[["crafting_interpreter",{"t":"CCCCCCCCCPPPPPPPGPPPPPPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPPPPGPPPPPPPNNNNNNNNNNNPPFPGFPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOFNNNNNNNNNFKNNNNNNNNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNMNFNNNNNNNNNFNNNNNNNNNOOONNONNNPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOO","n":["lox","ast","error","evaluator","parser","printer","scanner","token","token_type","Assign","","Binary","Block","Call","","Class","Expr","Expression","For","Function","Get","Grouping","If","Literal","Print","Return","Set","Stmt","Unary","Var","Variable","While","accept","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","eq","","fmt","","from","","into","","to_owned","","try_from","","try_into","","type_id","","arguments","callee","expression","left","name","","","","object","","operand","operator","","right","value","","","arguments","body","","callee","condition","","else_branch","increment","initializer","","keyword","methods","name","","","","params","then_branch","value","","DivisionByZero","DuplicateParameterName","FileNotFound","InvalidTypeConversion","IoError","LoxError","NonBooleanCondition","ParseError","ReturnOutsideFunction","RuntimeError","UndefinedVariable","UnexpectedCharacter","UnterminatedString","borrow","borrow_mut","eq","fmt","","from","into","to_string","try_from","try_into","type_id","Boolean","Class","Environment","Error","EvalResult","Evaluator","Function","Instance","NativeFunction","Nil","Number","Return","","String","Value","assign","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","define","eq","","evaluate_statements","fmt","","","","from","","","","get","get_output","into","","","","merge_to_parent","new","","to_owned","","to_string","try_from","","","","try_into","","","","type_id","","","","with_enclosing","body","class","fields","methods","name","","params","Parser","borrow","borrow_mut","from","into","new","parse","try_from","try_into","type_id","AstPrinter","Visitor","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","visit_assign","","visit_binary","","visit_block","","visit_call","","visit_class","","visit_expression","","visit_for","","visit_function","","visit_get","","visit_grouping","","visit_if","","visit_literal","","visit_print","","visit_return","","visit_set","","visit_super","","visit_this","","visit_unary","","visit_var","","visit_variable","","visit_while","","Scanner","borrow","borrow_mut","from","into","new","scan_tokens","try_from","try_into","type_id","Token","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","into","lexeme","line","literal","new","to_owned","token_type","try_from","try_into","type_id","And","Bang","BangEqual","Boolean","Class","Comma","Dot","Else","Eof","Equal","EqualEqual","False","For","Fun","Function","Greater","GreaterEqual","Identifier","If","LeftBrace","LeftParen","Less","LessEqual","LiteralValue","Minus","Nil","","Number","","Or","Percent","Plus","Print","Return","","RightBrace","RightParen","Semicolon","Slash","Star","String","StringLit","Super","This","TokenType","True","Var","While","as_number","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","eq","","fmt","","","from","","into","","to_owned","","to_string","try_from","","try_into","","type_id","","body","name","params"],"q":[[0,"crafting_interpreter"],[1,"crafting_interpreter::lox"],[9,"crafting_interpreter::lox::ast"],[60,"crafting_interpreter::lox::ast::Expr"],[77,"crafting_interpreter::lox::ast::Stmt"],[97,"crafting_interpreter::lox::error"],[121,"crafting_interpreter::lox::evaluator"],[188,"crafting_interpreter::lox::evaluator::Value"],[195,"crafting_interpreter::lox::parser"],[205,"crafting_interpreter::lox::printer"],[257,"crafting_interpreter::lox::scanner"],[267,"crafting_interpreter::lox::token"],[286,"crafting_interpreter::lox::token_type"],[363,"crafting_interpreter::lox::token_type::LiteralValue"],[366,"core::fmt"],[367,"core::result"],[368,"core::any"],[369,"alloc::string"],[370,"alloc::vec"],[371,"core::option"],[372,"alloc::boxed"]],"i":"`````````bj10100`0001101001`10101010101010101010101010101010D`0DbDdDfDhDjDl10Dn505E`42EbEdEf21Eh02Ej3ElEn240F`5420Ah0000`000000000000000000An0`Bd``11111101`AlB`13201321313131130133201321001321011330132013201321FbFd0Ff202`Bl00000000``Bn0000000h10101010101010101010101010101010101010101`Ch00000000`Bj00000000000000000Cj00Cf1111111111011111111`11010111110111110111`11101010101010101001010100101010Fh00","f":"````````````````````````````````{{{d{b}}{d{fh}}}c{}}{{{d{j}}{d{fh}}}c{}}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{b}}}b}{{{d{j}}}j}{{d{d{fc}}}l{}}0{dl}0{{{d{b}}{d{b}}}n}{{{d{j}}{d{j}}}n}{{{d{b}}{d{fA`}}}Ab}{{{d{j}}{d{fA`}}}Ab}{cc{}}0{{}c{}}0{dc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dAf}0``````````````````````````````````````````````````?>{{{d{Ah}}{d{Ah}}}n}{{{d{Ah}}{d{fA`}}}Ab}076{dAj}543```````````````{{{d{fAl}}AjAn}{{Ad{lAj}}}}{d{{d{c}}}{}}000{{{d{f}}}{{d{fc}}}{}}000{{{d{Al}}}Al}{{{d{An}}}An}{{d{d{fc}}}l{}}0{dl}0{{{d{fAl}}AjAn}l}{{{d{Al}}{d{Al}}}n}{{{d{An}}{d{An}}}n}{{{d{fB`}}{Bb{j}}}Bd}{{{d{Al}}{d{fA`}}}Ab}{{{d{An}}{d{fA`}}}Ab}0{{{d{Bd}}{d{fA`}}}Ab}{cc{}}000{{{d{Al}}{d{Bf}}}{{Bh{An}}}}{{{d{B`}}}Aj}{{}c{}}000{{{d{fAl}}}l}{{}B`}{{}Al}{dc{}}0{dAj}{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{dAf}000{AlAl}````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}>;{{{Bb{Bj}}}Bl}{{{d{fBl}}}{{Ad{{Bb{j}}Ah}}}}765``32{cc{}}>{{{d{fBn}}{d{b}}}Aj}987{{{d{fh}}{d{Bj}}{d{b}}}c{}}{{{d{fBn}}{d{Bj}}{d{b}}}Aj}{{{d{fh}}{d{b}}{d{Bj}}{d{b}}}c{}}{{{d{fBn}}{d{b}}{d{Bj}}{d{b}}}Aj}{{{d{fh}}{d{{C`{j}}}}}c{}}{{{d{fBn}}{d{{C`{j}}}}}Aj}{{{d{fh}}{d{b}}{d{{C`{b}}}}}c{}}{{{d{fBn}}{d{b}}{d{{C`{b}}}}}Aj}{{{d{fh}}{d{Bj}}{d{{C`{{Cb{Bjj}}}}}}}c{}}{{{d{fBn}}{d{Bj}}{d{{C`{{Cb{Bjj}}}}}}}Aj}{{{d{fh}}{d{b}}}c{}};{{{d{fh}}{d{{Bh{{Cd{j}}}}}}{d{{Bh{b}}}}{d{{Bh{b}}}}{d{j}}}c{}}{{{d{fBn}}{d{{Bh{{Cd{j}}}}}}{d{{Bh{b}}}}{d{{Bh{b}}}}{d{j}}}Aj}{{{d{fh}}{d{Bj}}{d{{C`{Bj}}}}{d{{C`{j}}}}}c{}}{{{d{fBn}}{d{Bj}}{d{{C`{Bj}}}}{d{{C`{j}}}}}Aj}{{{d{fh}}{d{b}}{d{Bj}}}c{}}{{{d{fBn}}{d{b}}{d{Bj}}}Aj}6{{{d{fBn}}{d{b}}}Aj}{{{d{fh}}{d{b}}{d{j}}{d{{Bh{j}}}}}c{}}{{{d{fBn}}{d{b}}{d{j}}{d{{Bh{j}}}}}Aj}{{{d{fh}}{d{Cf}}}c{}}{{{d{fBn}}{d{Cf}}}Aj};4{{{d{fh}}{d{Bj}}{d{{Bh{b}}}}}c{}}{{{d{fBn}}{d{Bj}}{d{{Bh{b}}}}}Aj}{{{d{fh}}{d{b}}{d{Bj}}{d{b}}}c{}}{{{d{fBn}}{d{b}}{d{Bj}}{d{b}}}Aj}{{{d{fh}}{d{Bj}}{d{Bj}}}c{}}{{{d{fBn}}{d{Bj}}{d{Bj}}}Aj}{{{d{fh}}{d{Bj}}}c{}}{{{d{fBn}}{d{Bj}}}Aj}{{{d{fh}}{d{Bj}}{d{b}}}c{}}{{{d{fBn}}{d{Bj}}{d{b}}}Aj}9832{{{d{fh}}{d{b}}{d{j}}}c{}}{{{d{fBn}}{d{b}}{d{j}}}Aj}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{cc{}}{{}c{}}{{{d{Bf}}}Ch}{{{d{fCh}}}{{Ad{{Bb{Bj}}Ah}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{dAf}`87{{{d{Bj}}}Bj}{{d{d{fc}}}l{}}{dl}{{{d{Bj}}{d{Bj}}}n}{{{d{Bj}}{d{fA`}}}Ab};:```{{CjAj{Bh{Cf}}Cl}Bj}{dc{}}`987````````````````````````````````````````````````{{{d{Cf}}}{{Bh{Cn}}}}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Cj}}}Cj}{{{d{Cf}}}Cf}::99{{{d{Cj}}{d{Cj}}}n}{{{d{Cf}}{d{Cf}}}n}{{{d{Cj}}{d{fA`}}}Ab}{{{d{Cf}}{d{fA`}}}Ab}0{cc{}}0{{}c{}}0;;{dAj}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{dAf}0```","D":"ACl","p":[[6,"Expr",9],[1,"reference"],[0,"mut"],[10,"Visitor",205],[6,"Stmt",9],[1,"unit"],[1,"bool"],[5,"Formatter",366],[8,"Result",366],[6,"Result",367],[5,"TypeId",368],[6,"LoxError",97],[5,"String",369],[5,"Environment",121],[6,"Value",121],[5,"Evaluator",121],[5,"Vec",370],[6,"EvalResult",121],[1,"str"],[6,"Option",371],[5,"Token",267],[5,"Parser",195],[5,"AstPrinter",205],[1,"slice"],[1,"tuple"],[5,"Box",372],[6,"LiteralValue",286],[5,"Scanner",257],[6,"TokenType",286],[1,"usize"],[1,"f64"],[15,"Call",60],[15,"Grouping",60],[15,"Binary",60],[15,"Variable",60],[15,"Assign",60],[15,"Get",60],[15,"Set",60],[15,"Unary",60],[15,"Literal",60],[15,"Call",77],[15,"For",77],[15,"Function",77],[15,"If",77],[15,"Var",77],[15,"Return",77],[15,"Class",77],[15,"Assign",77],[15,"Function",188],[15,"Instance",188],[15,"Class",188],[15,"Function",363]],"r":[],"b":[[113,"impl-Display-for-LoxError"],[114,"impl-Debug-for-LoxError"],[156,"impl-Display-for-Value"],[157,"impl-Debug-for-Value"],[348,"impl-Debug-for-LiteralValue"],[349,"impl-Display-for-LiteralValue"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANAAFQAAADAANQAsAG8AAgBzAAAAdgASAIoADQCZAAEAnAADAK0ADgC9AAYAxQABAMsAAgDQAAEA1QACAAMBAQAJAQIADQEGABoBAAAcAQIAUAEOAGMBCAA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[8371]}